#summary Just enough auxiliary bits to make the translated code work.
#labels ApiDoc

= Description =


This package provides the support necessary to use the translated
code.  The configuration modules used in translation take care of
many semantic differences between Java and Python, while this
package provides the rest.

=== Long (variable) ===

 _The generated code uses Longs just like Integers, so we use an alias instead of a subclass (for now)._

defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 183]
====== . ======

=== synchronized(lock) (function) ===

_Synchronization decorator.  from http://wiki.python.org/moin/PythonDecoratorLibrary _

  {{{
  lock: Lock or RLock instance
  returns: decorator that provides automatic locking
  }}}

defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 31]
====== . ======

=== classmethod_(classmethod) (class) ===

Classmethod that provides attribute delegation.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 19]

  method *`__init__(func)`*

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 23]
  ====== . ======

  method *`__getattr__(name)`*

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 27]
  ====== . ======

=== Boolean(object) (class) ===

Partial implementation of Java Boolean type.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 50]

  method *`__init__(value)`*

  _Constructor. _

    {{{
    value: bool instance, True or False
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 54]
  ====== . ======

  method *`booleanValue()`*

  _The value of this instance (a bool). _

    {{{
    returns: True or False
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 61]
  ====== . ======

  method *`valueOf(text)`*

  _Creates an instance of this class with a bool value. _

    {{{
    cls: this class
    text: string
    returns: instance of cls
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 69]
  ====== . ======

=== Cloneable(object) (class) ===

Stub for the Cloneable Java interface.  Some of the translated code implements the Java Cloneable interface, but its methods are never used.  We provide this class for sub typing, and will implement methods as needed later.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 80]

  method *`clone()`*

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 87]
  ====== . ======

=== DataInputStream(object) (class) ===

Partial implementation of the Java DataInputStream type.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 91]

  method *`__init__(stream)`*

  _Constructor. _

    {{{
    stream: any object with recv method
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 95]
  ====== . ======

  method *`readByte(unpack=struct.unpack)`*

  _Reads a byte from the contained stream. _

    {{{
    returns: string read from stream
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 102]
  ====== . ======

=== DataOutputStream(object) (class) ===

Partial implementation of the Java DataOutputStream type

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 110]

  method *`__init__(stream)`*

  _Constructor. _

    {{{
    stream: any object with send method
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 114]
  ====== . ======

  method *`write(data, pack=struct.pack, eol=struct.pack('!b', 0))`*

  _Writes data to the contained stream. _

    {{{
    data: string to send, or 0
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 121]
  ====== . ======

=== Double(float) (class) ===

Partial implementation of Java Double type.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 135]

  member *`MAX_VALUE`*

   _sentinel value used by the socket writer_

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 141]
  ====== . ======

  method *`parseDouble()`*

  _Float double (float) from string. _

    {{{
    text: value to parse
    returns: float instance
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 144]
  ====== . ======

=== Integer(int) (class) ===

Partial implementation of Java Integer type.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 153]

  member *`MAX_VALUE`*

   _sentinel value used by the socket writer_

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 159]
  ====== . ======

  method *`parseInt()`*

  _Int from string. _

    {{{
    text: value to parse
    returns: int instance
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 162]
  ====== . ======

  method *`parseLong()`*

  _Long from string. _

    {{{
    text: value to parse
    returns: long instance
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 171]
  ====== . ======

=== Socket(socket.socket) (class) ===

Partial implementation of the Java Socket type.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 186]

  method *`__init__(host, port)`*

  _Constructor; attempts connection immediately. _

    {{{
    host: hostname as string
    port: port number as integer
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 190]
  ====== . ======

  method *`getInputStream()`*

  _Returns this instance, which has a send method. _

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 199]
  ====== . ======

  method *`getOutputStream()`*

  _Returns this instance, which has a recv method. _

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 205]
  ====== . ======

  method *`isConnected()`*

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 211]
  ====== . ======

=== StringBuffer(list) (class) ===

Partial implementation of the Java StringBuffer type  Translated code uses instances of this type to build up strings. The list base type provides the append method.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 219]

  method *`__str__(join=str.join, chr=chr)`*

  _the string value of this instance _

    {{{
    returns: string from characters contained in this instance
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 225]
  ====== . ======

=== ThreadType(QThread) (class) ===

Partial implementation of Java Thread type, based on Qt3 QThread.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 236]

  method *`__init__(name)`*

  _Constructor. _

    {{{
    name: ignored
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 240]
  ====== . ======

  method *`interrupt()`*

  _Stop this thread (by call to terminate). _

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 247]
  ====== . ======

  method *`isInterrupted()`*

  _Check state of thread. _

    {{{
    returns: True if thread is finished
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 253]
  ====== . ======

  method *`setDaemon(value)`*

  _No-op. _

    {{{
    value: ignored
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 260]
  ====== . ======

  method *`setName(value)`*

  _No-op. _

    {{{
    value: ignored
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 267]
  ====== . ======

=== ThreadType(QThread) (class) ===

Partial implementation of Java Thread type, based on Qt4 QThread.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 279]

  method *`__init__(name)`*

  _Constructor. _

    {{{
    name: ignored
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 283]
  ====== . ======

  method *`interrupt()`*

  _stop this thread (by call to exit) _

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 290]
  ====== . ======

  method *`isInterrupted()`*

  _check state of thread _

    {{{
    returns: True if thread is finished
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 296]
  ====== . ======

  method *`setDaemon(value)`*

  _No-op. _

    {{{
    value: ignored
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 303]
  ====== . ======

  method *`setName(value)`*

  _sets the name of this QObject _

    {{{
    value: name of object as string
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 310]
  ====== . ======

=== ThreadType(threading.Thread) (class) ===

Partial implementation of Java Thread type, based on Python Thread.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 322]

  method *`__init__(name)`*

  _Constructor. _

    {{{
    name: name of this thread
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 326]
  ====== . ======

  method *`interrupt()`*

  _No-op; Python threads are not directly interruptible. _

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 334]
  ====== . ======

  method *`isInterrupted()`*

  _Check state of thread (always False). _

    {{{
    returns: False
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 340]
  ====== . ======

=== Thread(ThreadType) (class) ===

Thread parent type, based on available framework

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 348]

  method *`__init__(name, parent, dis)`*

  _Constructor. _

    {{{
    name: name of this thread
    parent: ignored
    dis: ignored
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/lib/__init__.py line 352]
  ====== . ======


