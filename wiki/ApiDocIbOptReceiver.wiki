#summary Defines Receiver class to handle inbound data.
#labels ApiDoc

=== messageMethod(name, argnames) (function) ===

_messageMethod -> creates method for dispatching messages _

  {{{
  name: name of method as string
  argnames: list of method argument names
  returns: newly created method (as closure)
  }}}

defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 12]
====== . ======

=== ReceiverType(type) (class) ===

ReceiverType -> metaclass that adds EWrapper methods to Receiver  This metaclass creates dispatch methods for each method defined by EWrapper.

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 26]

  method *`__new__(name, bases, namespace)`*

    {{{
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 32]
  ====== . ======

=== Receiver(object) (class) ===

Receiver -> dispatches messages to interested callables

class defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 38]

  method *`__init__(listeners=None, types=None)`*

    {{{
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 45]
  ====== . ======

  method *`dispatch(name, mapping)`*

  _send message to each listener _

    {{{
    name: method name
    mapping: values for message instance
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 49]
  ====== . ======

  method *`register(listener, *types)`*

  _associate listener with message types created by this Receiver _

    {{{
    listener: callable to receive messages
    *types: zero or more message types to associate with listener
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 66]
  ====== . ======

  method *`registerAll(listener)`*

  _associate listener with all messages created by this Receiver _

    {{{
    listener: callable to receive messages
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 80]
  ====== . ======

  method *`unregister(listener, *types)`*

  _disassociate listener with message types created by this Receiver _

    {{{
    listener: callable to no longer receive messages
    *types: zero or more message types to disassociate with listener
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 88]
  ====== . ======

  method *`unregisterAll(listener)`*

  _disassociate listener with all messages created by this Receiver _

    {{{
    listener: callable to no longer receive messages
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 104]
  ====== . ======

  method *`key()`*

  _lookup key for given object _

    {{{
    obj: any object
    returns: obj name or string representation
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 113]
  ====== . ======

  method *`error(e)`*

  _error -> handle an error generated by the reader  Error message types can't be associated in the default manner with this family of methods, so we define these three here by hand. _

    {{{
    e: some error value
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 125]
  ====== . ======

  method *`error_0(strval)`*

  _error -> handle an error given a string value _

    {{{
    strval: some error value as string
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 138]
  ====== . ======

  method *`error_1(id, errorCode, errorMsg)`*

  _error -> handle an error given an id, code and message _

    {{{
    id: error id
    errorCode: error code
    errorMsg: error message
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/receiver.py line 147]
  ====== . ======


