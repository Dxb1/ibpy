#summary Sugary sweet layer of icing on top of the TWS API.
#labels API-Doc

Use:
   {{{
   from ib.opt import ibConnection, message

   def my_callback(msg):
       ...

   con = ibConnection()
   con.register(my_callback, !message.TickSize, !message.TickPrice)
   con.connect()
   !con.reqAccountUpdates(...)
   ...
   con.unregister(my_callback, !message.TickSize)
   }}}

Enable and disable logging:

   {{{
   con.enableLogging()
   ...
   !con.enableLogging(False)
   }}}

==== Connection(object) ====

_Connection -> encapsulates a connection to !TWS _


class defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/__init__.py line 37]

  `__init__(host, port, clientId)`


  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/__init__.py line 41]
  ====== . ======

  `__getattr__(name)`


  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/__init__.py line 48]
  ====== . ======

  `connect()`

  _establish a connection to !TWS with instance attributes _

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/__init__.py line 61]
  ====== . ======

  `enableLogging(enable=True)`

  _toggle logging of all messages _

    {{{
    enable : if True (default), enables logging; otherwise disables
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/__init__.py line 68]
  ====== . ======

  `logMessage(message)`

  _format and send a message values to the logger _

    {{{
    message : instance of Message
    returns: None
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/__init__.py line 80]
  ====== . ======

  `create(host='localhost', port=7496, clientId=0)`

  _creates and returns Connection object _

    {{{
    host : name of host for connection; default is localhost
    port : port number for connection; default is 7496
    clientId : client identifier to send when connected
    returns: Connection instance
    }}}

  defined at [http://ibpy.googlecode.com/svn/trunk/ib/opt/__init__.py line 91]
  ====== . ======



